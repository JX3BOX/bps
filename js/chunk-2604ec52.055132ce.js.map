{"version":3,"sources":["webpack:///./src/views/Index.vue?fedd","webpack:///./src/views/Index.vue","webpack:///src/views/Index.vue","webpack:///./src/views/Index.vue?981a","webpack:///./src/views/Index.vue?93db"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","loading","expression","staticClass","attrs","slot","publish_link","_v","on","onSearch","nativeOn","$event","type","indexOf","_k","keyCode","key","apply","arguments","model","search","callback","$$v","trim","client","clients","filterImperceptibly","pv_types","filterMeta","topics","topic","data","length","_l","item","i","order","hasNextPage","appendPage","per","total","page","changePage","staticRenderFns","props","pages","number_queries","subtype","mark","$store","state","zlp","tag","all","std","origin","wujie","computed","publishLink","appKey","query","pg_queries","reset_queries","_ref","post_topics","_toConsumableArray","Set","concat","methods","reporterLink","val","prefix","loadData","buildQuery","appendMode","_query","undefined","sticky","_this","console","log","getPosts","then","res","_res$data3","_res$data3$data","_res$data4","_res$data4$data","_res$data5","_res$data5$data","_res$data","_res$data$data","_res$data2","_res$data2$data","list","reportNow","caller","aggregate","map","ID","finally","replaceRoute","extend","$router","push","$route","Object","assign","window","scrollTo","catch","err","o","_defineProperty","onTagInput","watch","deep","immediate","handler","keys","includes","mounted","components","listItem","ListLayout","component"],"mappings":"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","file":"js/chunk-2604ec52.055132ce.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../node_modules/vue-svg-inline-loader/dist/index.min.js!./Index.vue?vue&type=style&index=0&id=4f5f2336&prod&lang=less\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('ListLayout',[_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"m-archive-box\"},[_c('div',{staticClass:\"m-archive-search\",attrs:{\"slot\":\"search-before\"},slot:\"search-before\"},[_c('a',{staticClass:\"u-publish el-button el-button--primary\",attrs:{\"href\":_vm.publish_link}},[_vm._v(\"+ 发布作品\")]),_c('el-input',{attrs:{\"placeholder\":\"请输入搜索内容\",\"clearable\":\"\"},on:{\"clear\":_vm.onSearch},nativeOn:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.onSearch.apply(null, arguments)}},model:{value:(_vm.search),callback:function ($$v) {_vm.search=(typeof $$v === 'string'? $$v.trim(): $$v)},expression:\"search\"}},[_c('span',{attrs:{\"slot\":\"prepend\"},slot:\"prepend\"},[_c('i',{staticClass:\"el-icon-search\"}),_vm._v(\" \"),_c('span',{staticClass:\"u-search\"},[_vm._v(\"关键词\")])]),_c('el-button',{staticClass:\"u-btn\",attrs:{\"slot\":\"append\",\"icon\":\"el-icon-position\"},on:{\"click\":_vm.onSearch},slot:\"append\"})],1)],1),_c('div',{staticClass:\"m-archive-filter\"},[_c('div',{staticClass:\"m-filter--left\"},[_c('clientBy',{attrs:{\"type\":_vm.client,\"clients\":_vm.clients},on:{\"filter\":_vm.filterImperceptibly}}),_c('markBy',{attrs:{\"marks\":_vm.pv_types,\"type\":\"tag\",\"placeholder\":\"类型\"},on:{\"filter\":_vm.filterMeta}}),_c('markBy',{on:{\"filter\":_vm.filterMeta}}),_c('zlpBy',{attrs:{\"type\":\"zlp\",\"client\":_vm.client},on:{\"filter\":_vm.filterMeta}}),_c('topicBy',{attrs:{\"topics\":_vm.topics},model:{value:(_vm.topic),callback:function ($$v) {_vm.topic=$$v},expression:\"topic\"}})],1),_c('div',{staticClass:\"m-filter--right\"},[_c('orderBy',{on:{\"filter\":_vm.filterMeta}})],1)]),(_vm.data && _vm.data.length)?_c('div',{staticClass:\"m-archive-list\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.data),function(item,i){return _c('list-item',{key:i + item,attrs:{\"item\":item,\"order\":_vm.order,\"caller\":\"bps_index_click\"}})}),1)]):_c('el-alert',{staticClass:\"m-archive-null\",attrs:{\"title\":\"没有找到相关条目\",\"type\":\"info\",\"center\":\"\",\"show-icon\":\"\"}}),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hasNextPage),expression:\"hasNextPage\"}],staticClass:\"m-archive-more\",attrs:{\"type\":\"primary\",\"loading\":_vm.loading,\"icon\":\"el-icon-arrow-down\"},on:{\"click\":_vm.appendPage}},[_vm._v(\"加载更多\")]),_c('el-pagination',{staticClass:\"m-archive-pages\",attrs:{\"background\":\"\",\"layout\":\"total, prev, pager, next, jumper\",\"hide-on-single-page\":true,\"page-size\":_vm.per,\"total\":_vm.total,\"current-page\":_vm.page},on:{\"update:currentPage\":function($event){_vm.page=$event},\"update:current-page\":function($event){_vm.page=$event},\"current-change\":_vm.changePage}})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <ListLayout>\n        <div class=\"m-archive-box\" v-loading=\"loading\">\n            <!-- 搜索 -->\n            <div class=\"m-archive-search\" slot=\"search-before\">\n                <a :href=\"publish_link\" class=\"u-publish el-button el-button--primary\">+ 发布作品</a>\n                <el-input placeholder=\"请输入搜索内容\" v-model.trim.lazy=\"search\" clearable @clear=\"onSearch\" @keydown.native.enter=\"onSearch\">\n                    <span slot=\"prepend\"><i class=\"el-icon-search\"></i> <span class=\"u-search\">关键词</span></span>\n                    <el-button slot=\"append\" icon=\"el-icon-position\" class=\"u-btn\" @click=\"onSearch\"></el-button>\n                </el-input>\n            </div>\n\n            <!-- 筛选 -->\n            <div class=\"m-archive-filter\">\n                <div class=\"m-filter--left\">\n                    <!-- 版本过滤 -->\n                    <clientBy @filter=\"filterImperceptibly\" :type=\"client\" :clients=\"clients\"></clientBy>\n\n                    <!-- 类型过滤 -->\n                    <markBy @filter=\"filterMeta\" :marks=\"pv_types\" type=\"tag\" placeholder=\"类型\"></markBy>\n\n                    <!-- 角标过滤 -->\n                    <markBy @filter=\"filterMeta\"></markBy>\n                    <!-- 资料片过滤 -->\n                    <zlpBy @filter=\"filterMeta\" type=\"zlp\" :client=\"client\"></zlpBy>\n                    <!-- 主题过滤 -->\n                    <topicBy v-model=\"topic\" :topics=\"topics\" />\n                </div>\n                <div class=\"m-filter--right\">\n                    <!-- 排序过滤 -->\n                    <orderBy @filter=\"filterMeta\"></orderBy>\n                </div>\n            </div>\n\n            <!-- 推荐 -->\n            <!-- <rec-table v-if=\"!search && !subtype\" /> -->\n\n            <!-- 列表 -->\n            <div class=\"m-archive-list\" v-if=\"data && data.length\">\n                <ul class=\"u-list\">\n                    <list-item v-for=\"(item, i) in data\" :key=\"i + item\" :item=\"item\" :order=\"order\" caller=\"bps_index_click\" />\n                </ul>\n            </div>\n\n            <!-- 空 -->\n            <el-alert v-else class=\"m-archive-null\" title=\"没有找到相关条目\" type=\"info\" center show-icon></el-alert>\n\n            <!-- 下一页 -->\n            <el-button\n                class=\"m-archive-more\"\n                v-show=\"hasNextPage\"\n                type=\"primary\"\n                @click=\"appendPage\"\n                :loading=\"loading\"\n                icon=\"el-icon-arrow-down\"\n                >加载更多</el-button\n            >\n\n            <!-- 分页 -->\n            <el-pagination\n                class=\"m-archive-pages\"\n                background\n                layout=\"total, prev, pager, next, jumper\"\n                :hide-on-single-page=\"true\"\n                :page-size=\"per\"\n                :total=\"total\"\n                :current-page.sync=\"page\"\n                @current-change=\"changePage\"\n            ></el-pagination>\n        </div>\n    </ListLayout>\n</template>\n<script>\nimport ListLayout from \"@/layout/ListLayout.vue\";\nimport listItem from \"@/components/list/list_item.vue\";\n// import recTable from \"@/components/list/rec_table.vue\";\n\nimport { appKey } from \"@/../setting.json\";\nimport { publishLink } from \"@jx3box/jx3box-common/js/utils\";\nimport { getPosts } from \"@/service/post\";\nimport post_topics from \"@jx3box/jx3box-common/data/post_topics.json\";\nimport { reportNow } from \"@jx3box/jx3box-common/js/reporter\";\nexport default {\n    name: \"Index\",\n    props: [],\n    data: function () {\n        return {\n            loading: false, //加载状态\n            data: [], //数据列表\n\n            page: 1, //当前页数\n            per: 10, //每页条目\n            total: 1, //总条目数\n            pages: 1, //总页数\n            number_queries: [\"per\", \"page\"],\n\n            subtype: \"\", //子类别\n            order: \"update\", //排序模式\n            mark: \"\", //筛选模式\n            client: this.$store.state.client, //版本选择\n            search: \"\", //搜索字串\n            zlp: \"\", //资料片\n            tag: \"\", //标签\n            topic: \"\", // 主题\n\n            pv_types: {\n                \"PVE\": \"PVE\",\n                \"PVP\": \"PVP\",\n            },\n\n            clients: {\n                all: \"双端\",\n                std: \"重制\",\n                origin: \"缘起\",\n                wujie: \"无界\"\n            },\n        };\n    },\n    computed: {\n        // 发布按钮链接\n        publish_link: function () {\n            return publishLink(appKey);\n        },\n        // 是否显示加载更多\n        hasNextPage: function () {\n            return this.pages > 1 && this.page < this.total;\n        },\n        // 请求关联参数\n        query: function () {\n            return {\n                subtype: this.subtype,\n                order: this.order,\n                mark: this.mark,\n                client: this.client,\n                zlp: this.zlp,\n                tag: this.tag,\n                topic: this.topic,\n            };\n        },\n        // 分页相关参数\n        pg_queries: function () {\n            return {\n                page: this.page,\n                per: this.per,\n            };\n        },\n        // 重置页码参数\n        reset_queries: function () {\n            return [this.subtype];\n        },\n        topics: function ({ tag }) {\n            if (tag === 'PVE') {\n                return post_topics['bps_pve']\n            }\n            if (tag === 'PVP') {\n                return post_topics['bps_pvp']\n            }\n            return [...new Set([...post_topics['bps_pve'], ...post_topics['bps_pvp']])]\n        },\n    },\n    methods: {\n        reporterLink: function (val) {\n            const prefix = this.client === 'std' ? 'www' : 'origin'\n            return`${prefix}:/${appKey}/` + val;\n        },\n        onSearch() {\n            if (this.page !== 1) {\n                this.page = 1;\n                return;\n            }\n            this.loadData();\n        },\n        // 构建最终请求参数\n        buildQuery: function (appendMode) {\n            if (appendMode) {\n                this.page += 1;\n            }\n            let _query = {\n                per: this.per,\n                page: this.page,\n            };\n\n            for (let key in this.query) {\n                if (this.query[key] !== undefined && this.query[key] !== \"\" && this.query[key] !== null) {\n                    if (key == \"search\") {\n                        _query.search = this.query.search.trim();\n                    } else {\n                        _query[key] = this.query[key];\n                    }\n                }\n            }\n            // 当指定子类别时启用置顶\n            if (_query.subtype) {\n                _query.sticky = 1;\n            }\n\n            if (this.search) {\n                _query.search = this.search.trim();\n            }\n\n            return _query;\n        },\n        // 加载数据\n        loadData: function (appendMode = false) {\n            let query = this.buildQuery(appendMode);\n            console.log(\"[cms-list]\", \"<loading data>\", query);\n\n            this.loading = true;\n            return getPosts(query)\n                .then((res) => {\n                    if (appendMode) {\n                        this.data = this.data.concat(res.data?.data?.list);\n                    } else {\n                        this.data = res.data?.data?.list;\n                    }\n                    this.total = res.data?.data?.total;\n                    this.pages = res.data?.data?.pages;\n\n                    reportNow({\n                        caller: 'bps_index_load',\n                        data: {\n                            aggregate: res.data?.data?.list.map(item => this.reporterLink(item.ID)),\n                        }\n                    })\n                })\n                .finally(() => {\n                    this.loading = false;\n                });\n        },\n        // 路由绑定\n        replaceRoute: function (extend) {\n            return this.$router\n                .push({ name: this.$route.name, query: Object.assign({}, this.$route.query, extend) })\n                .then(() => {\n                    window.scrollTo(0, 0);\n                })\n                .catch((err) => {});\n        },\n        // 条件过滤\n        filterMeta: function (o) {\n            this.replaceRoute({ [o[\"type\"]]: o[\"val\"], page: 1 });\n        },\n        // 条件过滤（不附加路由）\n        filterImperceptibly: function (o) {\n            this[o[\"type\"]] = o[\"val\"];\n        },\n        // 翻页加载\n        changePage: function (i) {\n            this.loadData();\n            this.replaceRoute({ page: i });\n        },\n        // 追加加载\n        appendPage: function () {\n            this.loadData(true);\n        },\n        onTagInput: function (val) {\n            this.tag = val;\n            this.replaceRoute({ tag: val, page: 1 });\n        },\n    },\n    watch: {\n        // 加载路由参数\n        \"$route.query\": {\n            deep: true,\n            immediate: true,\n            handler: function (query) {\n                if (Object.keys(query).length) {\n                    console.log(\"[cms-list]\", \"<route query change>\", query);\n                    for (let key in query) {\n                        // for:element分页组件兼容性问题\n                        if (this.number_queries.includes(key)) {\n                            this[key] = ~~query[key];\n                        } else {\n                            this[key] = query[key];\n                        }\n                    }\n                }\n            },\n        },\n        // 重置分页参数\n        reset_queries: {\n            deep: true,\n            handler: function () {\n                console.log(\"[cms-list]\", \"<reset page>\");\n                this.page = 1;\n            },\n        },\n        // 监听请求参数\n        query: {\n            deep: true,\n            immediate: true,\n            handler: function (query) {\n                console.log(\"[cms-list]\", \"<request query change>\", query);\n                this.loadData();\n            },\n        },\n    },\n    mounted: function () {},\n    components: {\n        listItem,\n        ListLayout,\n        // recTable\n    },\n};\n</script>\n\n<style lang=\"less\">\n@import \"~@/assets/css/list.less\";\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../node_modules/vue-svg-inline-loader/dist/index.min.js!./Index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../node_modules/vue-svg-inline-loader/dist/index.min.js!./Index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=4f5f2336\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=4f5f2336&prod&lang=less\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}